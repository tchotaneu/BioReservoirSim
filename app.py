import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from data_generator import generate_data
from model import train_model

# Titre de l'application
st.title(" BioReservoirSim ‚Äì Simulateur de Biosenseur Bact√©rien")

# Slider pour r√©gler le bruit dans les donn√©es
noise = st.slider("Niveau de bruit biologique", min_value=0.0, max_value=1.0, value=0.1, step=0.05)

# Nombre d'√©chantillons √† g√©n√©rer
n_samples = st.number_input("Nombre d‚Äô√©chantillons", min_value=50, max_value=1000, value=200, step=50)

# G√©n√©rer les donn√©es
df = generate_data(n_samples=n_samples, noise=noise)
X = df[["nutrient_A", "nutrient_B", "nutrient_C"]]
y = df["label"]

# Entra√Æner le mod√®le
model, acc = train_model(X, y)

st.write(f"üìä Pr√©cision du mod√®le (Random Forest) : **{acc:.2f}**")

# Afficher les donn√©es sous forme de tableau
if st.checkbox("Afficher les donn√©es brutes"):
    st.dataframe(df)

# Graphique de la r√©ponse
st.subheader("R√©ponse simul√©e de la bact√©rie")
fig, ax = plt.subplots()
scatter = ax.scatter(df["nutrient_A"], df["response"], c=df["label"], cmap="coolwarm", edgecolors='k')
ax.set_xlabel("Nutrient A")
ax.set_ylabel("R√©ponse simul√©e (croissance)")
ax.set_title("R√©ponse de la bact√©rie en fonction des nutriments")
st.pyplot(fig)
